#nullable enable
using System;
using System.Collections.Generic;
using System.Linq;
using LEotA.Clients.EngineClient;
using LEotA.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.Extensions.Logging;
using LEotA.Models;

namespace LEotA.Pages
{
    public class  AboutUsModel : PageModel
    {
        private readonly ILogger<AboutUsModel> _logger;
        private readonly EngineClientManager _engineClientManager;
        public List<AboutUs>? _aboutUsList { get; set; }
        public Dictionary<byte[], AboutUs> imgSrcDict = new Dictionary<byte[], AboutUs>();

        public AboutUs ASD { get; set; }
        
        public AboutUsModel(ILogger<AboutUsModel> logger, EngineClientManager engineClientManager)
        {
            _logger = logger;
            _engineClientManager = engineClientManager;
        }
        
        public void OnGet()
        {
            _aboutUsList = _engineClientManager.AboutUsGetPaged(null, 10, null, null, false);

            ASD = new AboutUs()
            {
                Id = "asd",
                Image = System.Convert.FromBase64String(
                    ""),
                Text = "cock",
                Culture = "en"
            };
            
            _aboutUsList.Add(ASD);
            
            foreach (var product in _aboutUsList)
            {
                // var base64 = Convert.ToBase64String(product.Image);
                // imgSrcDict.Add(String.Format("data:image/png;base64,{0}", base64), product);
                imgSrcDict.Add(product.Image, product);
                ViewData.Add(new KeyValuePair<string, object>($@"img{product.Id}", product.Image.ToArray()));
                // ViewBag.Base64String = "data:image/png;base64," + Convert.ToBase64String(ProducesResponseTypeAttribute.I.Data, 0, image.Data.Length);
            }

        }
        public class AboutUsImageViewModel
        {
            public List<AboutUs>? _aboutUsList { get; set; }
            public List<string> imgSrcList { get; set; }
        }
    }
}